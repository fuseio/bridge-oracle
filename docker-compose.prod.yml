version: '2.4'
services:
  rabbit:
    cpus: 0.3
    mem_limit: 500m
    environment: ['RABBITMQ_NODENAME=node@rabbit']
    logging:
      driver: "awslogs"
      options:
        awslogs-region: "eu-west-1"
        awslogs-group: "token-bridge"
        awslogs-stream: "rabbit"
        awslogs-create-group: "true"
    hostname: rabbit
    image: rabbitmq:3
    networks:
      - net_rabbit_bridge_request
      - net_rabbit_bridge_collected
      - net_rabbit_bridge_affirmation
      - net_rabbit_bridge_initiate_change
      - net_rabbit_bridge_rewarded_on_cycle
      - net_rabbit_bridge_deployed
      - net_rabbit_bridge_senderhome
      - net_rabbit_bridge_senderforeign
    restart: unless-stopped
    volumes: ['~/bridge_data/rabbitmq:/var/lib/rabbitmq/mnesia']
  redis:
    cpus: 0.1
    mem_limit: 500m
    command: [redis-server, --appendonly, 'yes']
    logging:
      driver: "awslogs"
      options:
        awslogs-region: "eu-west-1"
        awslogs-group: "token-bridge"
        awslogs-stream: "redis"
        awslogs-create-group: "true"
    hostname: redis
    image: redis:4
    networks:
      - net_db_bridge_request
      - net_db_bridge_collected
      - net_db_bridge_affirmation
      - net_db_bridge_initiate_change
      - net_db_bridge_rewarded_on_cycle
      - net_db_bridge_deployed
      - net_db_bridge_senderhome
      - net_db_bridge_senderforeign
    restart: unless-stopped
    volumes: ['~/bridge_data/redis:/data']
  bridge_request:
    cpus: 0.1
    mem_limit: 500m
    build: .
    command: 'true'
    logging:
      driver: "awslogs"
      options:
        awslogs-region: "eu-west-1"
        awslogs-group: "token-bridge"
        awslogs-stream: "bridge_request"
        awslogs-create-group: "true"
    env_file: ./.env
    environment:
      - NODE_ENV=production
      - VALIDATOR_ADDRESS_PRIVATE_KEY=${VALIDATOR_ADDRESS_PRIVATE_KEY}
    restart: unless-stopped
    entrypoint: npm run watcher:signature-request
    networks:
      - net_db_bridge_request
      - net_rabbit_bridge_request
  bridge_collected:
    cpus: 0.1
    mem_limit: 500m
    build: .
    command: 'true'
    logging:
      driver: "awslogs"
      options:
        awslogs-region: "eu-west-1"
        awslogs-group: "token-bridge"
        awslogs-stream: "bridge_collected"
        awslogs-create-group: "true"
    env_file: ./.env
    environment:
      - NODE_ENV=production
      - VALIDATOR_ADDRESS=${VALIDATOR_ADDRESS}
    restart: unless-stopped
    entrypoint: npm run watcher:collected-signatures
    networks:
      - net_db_bridge_collected
      - net_rabbit_bridge_collected
  bridge_affirmation:
    cpus: 0.1
    mem_limit: 500m
    build: .
    command: 'true'
    logging:
      driver: "awslogs"
      options:
        awslogs-region: "eu-west-1"
        awslogs-group: "token-bridge"
        awslogs-stream: "bridge_affirmation"
        awslogs-create-group: "true"
    env_file: ./.env
    environment:
      - NODE_ENV=production
      - VALIDATOR_ADDRESS=${VALIDATOR_ADDRESS}
    restart: unless-stopped
    entrypoint: npm run watcher:affirmation-request
    networks:
      - net_db_bridge_affirmation
      - net_rabbit_bridge_affirmation
  bridge_initiate_change:
    cpus: 0.1
    mem_limit: 500m
    build: .
    command: 'true'
    env_file: ./.env
    environment:
      - NODE_ENV=production
      - VALIDATOR_ADDRESS=${VALIDATOR_ADDRESS}
    restart: unless-stopped
    entrypoint: npm run watcher:initiate-change
    networks:
      - net_db_bridge_initiate_change
      - net_rabbit_bridge_initiate_change
  bridge_rewarded_on_cycle:
    cpus: 0.1
    mem_limit: 500m
    build: .
    command: 'true'
    env_file: ./.env
    environment:
      - NODE_ENV=production
      - VALIDATOR_ADDRESS=${VALIDATOR_ADDRESS}
    restart: unless-stopped
    entrypoint: npm run watcher:rewarded-on-cycle
    networks:
      - net_db_bridge_rewarded_on_cycle
      - net_rabbit_bridge_rewarded_on_cycle
  bridge_deployed:
    cpus: 0.1
    mem_limit: 500m
    build: .
    command: 'true'
    logging:
      driver: "awslogs"
      options:
        awslogs-region: "eu-west-1"
        awslogs-group: "token-bridge"
        awslogs-stream: "bridge_deployed"
        awslogs-create-group: "true"
    env_file: ./.env
    environment:
      - NODE_ENV=production
      - VALIDATOR_ADDRESS=${VALIDATOR_ADDRESS}
    restart: unless-stopped
    entrypoint: npm run watcher:bridge-deployed
    networks:
      - net_db_bridge_deployed
      - net_rabbit_bridge_deployed
  bridge_senderhome:
    cpus: 0.1
    mem_limit: 500m
    build: .
    command: 'true'
    logging:
      driver: "awslogs"
      options:
        awslogs-region: "eu-west-1"
        awslogs-group: "token-bridge"
        awslogs-stream: "bridge_senderhome"
        awslogs-create-group: "true"
    env_file: ./.env
    environment:
      - NODE_ENV=production
      - VALIDATOR_ADDRESS_PRIVATE_KEY=${VALIDATOR_ADDRESS_PRIVATE_KEY}
    restart: unless-stopped
    entrypoint: npm run sender:home
    networks:
      - net_db_bridge_senderhome
      - net_rabbit_bridge_senderhome
  bridge_senderforeign:
    cpus: 0.1
    mem_limit: 500m
    build: .
    command: 'true'
    logging:
      driver: "awslogs"
      options:
        awslogs-region: "eu-west-1"
        awslogs-group: "token-bridge"
        awslogs-stream: "bridge_senderforeign"
        awslogs-create-group: "true"
    env_file: ./.env
    environment:
      - NODE_ENV=production
      - VALIDATOR_ADDRESS_PRIVATE_KEY=${VALIDATOR_ADDRESS_PRIVATE_KEY}
    restart: unless-stopped
    entrypoint: npm run sender:foreign
    networks:
      - net_db_bridge_senderforeign
      - net_rabbit_bridge_senderforeign

networks:
  net_db_bridge_request:
    driver: bridge
  net_db_bridge_collected:
    driver: bridge
  net_db_bridge_affirmation:
    driver: bridge
  net_db_bridge_initiate_change:
    driver: bridge
  net_db_bridge_rewarded_on_cycle:
    driver: bridge
  net_db_bridge_deployed:
    driver: bridge
  net_db_bridge_senderhome:
    driver: bridge
  net_db_bridge_senderforeign:
    driver: bridge
  net_rabbit_bridge_request:
    driver: bridge
  net_rabbit_bridge_collected:
    driver: bridge
  net_rabbit_bridge_affirmation:
    driver: bridge
  net_rabbit_bridge_initiate_change:
    driver: bridge
  net_rabbit_bridge_rewarded_on_cycle:
    driver: bridge
  net_rabbit_bridge_deployed:
    driver: bridge
  net_rabbit_bridge_senderhome:
    driver: bridge
  net_rabbit_bridge_senderforeign:
    driver: bridge